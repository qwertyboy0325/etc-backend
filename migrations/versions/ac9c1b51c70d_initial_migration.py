"""Initial migration

Revision ID: ac9c1b51c70d
Revises:
Create Date: 2025-07-05 15:00:29.778875

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "ac9c1b51c70d"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "global_vehicle_types",
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("display_name", sa.String(length=150), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("category", sa.String(length=50), nullable=True),
        sa.Column("sort_order", sa.Integer(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("is_system", sa.Boolean(), nullable=False),
        sa.Column("color", sa.String(length=7), nullable=True),
        sa.Column("usage_count", sa.Integer(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_global_vehicle_types_name"),
        "global_vehicle_types",
        ["name"],
        unique=True,
    )
    op.create_table(
        "users",
        sa.Column("email", sa.String(length=255), nullable=False),
        sa.Column("full_name", sa.String(length=100), nullable=False),
        sa.Column("username", sa.String(length=50), nullable=True),
        sa.Column("hashed_password", sa.String(length=255), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("is_verified", sa.Boolean(), nullable=False),
        sa.Column(
            "global_role",
            sa.Enum("SYSTEM_ADMIN", "ADMIN", "USER", name="globalrole"),
            nullable=False,
        ),
        sa.Column("bio", sa.Text(), nullable=True),
        sa.Column("avatar_url", sa.String(length=500), nullable=True),
        sa.Column("phone", sa.String(length=20), nullable=True),
        sa.Column("last_login", sa.DateTime(), nullable=True),
        sa.Column("last_active", sa.DateTime(), nullable=True),
        sa.Column("email_verified_at", sa.DateTime(), nullable=True),
        sa.Column("is_suspended", sa.Boolean(), nullable=False),
        sa.Column("suspended_at", sa.DateTime(), nullable=True),
        sa.Column("suspended_reason", sa.Text(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_index(op.f("ix_users_username"), "users", ["username"], unique=True)
    op.create_table(
        "pointcloud_files",
        sa.Column("filename", sa.String(length=255), nullable=False),
        sa.Column("original_filename", sa.String(length=255), nullable=False),
        sa.Column("file_path", sa.String(length=500), nullable=False),
        sa.Column("file_size", sa.BigInteger(), nullable=False),
        sa.Column("file_extension", sa.String(length=10), nullable=False),
        sa.Column("mime_type", sa.String(length=100), nullable=True),
        sa.Column(
            "status",
            sa.Enum(
                "UPLOADING",
                "UPLOADED",
                "PROCESSING",
                "PROCESSED",
                "FAILED",
                "DELETED",
                name="filestatus",
            ),
            nullable=False,
        ),
        sa.Column("uploaded_by", sa.UUID(), nullable=False),
        sa.Column("upload_started_at", sa.DateTime(), nullable=False),
        sa.Column("upload_completed_at", sa.DateTime(), nullable=True),
        sa.Column("processing_started_at", sa.DateTime(), nullable=True),
        sa.Column("processing_completed_at", sa.DateTime(), nullable=True),
        sa.Column("processing_logs", sa.Text(), nullable=True),
        sa.Column("point_count", sa.Integer(), nullable=True),
        sa.Column("dimensions", sa.Integer(), nullable=True),
        sa.Column("min_x", sa.String(length=50), nullable=True),
        sa.Column("max_x", sa.String(length=50), nullable=True),
        sa.Column("min_y", sa.String(length=50), nullable=True),
        sa.Column("max_y", sa.String(length=50), nullable=True),
        sa.Column("min_z", sa.String(length=50), nullable=True),
        sa.Column("max_z", sa.String(length=50), nullable=True),
        sa.Column("data_quality", sa.Integer(), nullable=True),
        sa.Column("has_noise", sa.Boolean(), nullable=False),
        sa.Column("has_outliers", sa.Boolean(), nullable=False),
        sa.Column("extra_data", sa.JSON(), nullable=True),
        sa.Column("error_message", sa.Text(), nullable=True),
        sa.Column("error_details", sa.JSON(), nullable=True),
        sa.Column("checksum", sa.String(length=64), nullable=True),
        sa.Column("project_id", sa.UUID(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["uploaded_by"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_pointcloud_files_filename"),
        "pointcloud_files",
        ["filename"],
        unique=False,
    )
    op.create_index(
        op.f("ix_pointcloud_files_project_id"),
        "pointcloud_files",
        ["project_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_pointcloud_files_status"), "pointcloud_files", ["status"], unique=False
    )
    op.create_table(
        "project_vehicle_types",
        sa.Column("global_type_id", sa.UUID(), nullable=True),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("display_name", sa.String(length=150), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column(
            "source",
            sa.Enum("GLOBAL", "PROJECT", name="vehicletypesource"),
            nullable=False,
        ),
        sa.Column("category", sa.String(length=50), nullable=True),
        sa.Column("sort_order", sa.Integer(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("color", sa.String(length=7), nullable=True),
        sa.Column("usage_count", sa.Integer(), nullable=False),
        sa.Column("project_id", sa.UUID(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["global_type_id"],
            ["global_vehicle_types.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("project_id", "name", name="uq_project_vehicle_type_name"),
    )
    op.create_index(
        op.f("ix_project_vehicle_types_name"),
        "project_vehicle_types",
        ["name"],
        unique=False,
    )
    op.create_index(
        op.f("ix_project_vehicle_types_project_id"),
        "project_vehicle_types",
        ["project_id"],
        unique=False,
    )
    op.create_table(
        "projects",
        sa.Column("name", sa.String(length=200), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column(
            "status",
            sa.Enum("ACTIVE", "PAUSED", "COMPLETED", "ARCHIVED", name="projectstatus"),
            nullable=False,
        ),
        sa.Column("created_by", sa.UUID(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("is_public", sa.Boolean(), nullable=False),
        sa.Column("total_tasks", sa.Integer(), nullable=False),
        sa.Column("completed_tasks", sa.Integer(), nullable=False),
        sa.Column("total_annotations", sa.Integer(), nullable=False),
        sa.Column("start_date", sa.DateTime(), nullable=True),
        sa.Column("end_date", sa.DateTime(), nullable=True),
        sa.Column("max_annotations_per_task", sa.Integer(), nullable=False),
        sa.Column("auto_assign_tasks", sa.Boolean(), nullable=False),
        sa.Column("require_review", sa.Boolean(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_projects_name"), "projects", ["name"], unique=False)
    op.create_index(op.f("ix_projects_status"), "projects", ["status"], unique=False)
    op.create_table(
        "project_members",
        sa.Column("project_id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column(
            "role",
            sa.Enum(
                "PROJECT_ADMIN", "ANNOTATOR", "REVIEWER", "VIEWER", name="projectrole"
            ),
            nullable=False,
        ),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("joined_at", sa.DateTime(), nullable=False),
        sa.Column("left_at", sa.DateTime(), nullable=True),
        sa.Column("invited_by", sa.UUID(), nullable=True),
        sa.Column("invitation_accepted_at", sa.DateTime(), nullable=True),
        sa.Column("tasks_assigned", sa.Integer(), nullable=False),
        sa.Column("tasks_completed", sa.Integer(), nullable=False),
        sa.Column("annotations_created", sa.Integer(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["invited_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["project_id"],
            ["projects.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("project_id", "user_id", name="uq_project_member"),
    )
    op.create_index(
        op.f("ix_project_members_project_id"),
        "project_members",
        ["project_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_project_members_user_id"), "project_members", ["user_id"], unique=False
    )
    op.create_table(
        "tasks",
        sa.Column("name", sa.String(length=200), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column(
            "status",
            sa.Enum(
                "PENDING",
                "ASSIGNED",
                "IN_PROGRESS",
                "COMPLETED",
                "REVIEWED",
                "REJECTED",
                "CANCELLED",
                name="taskstatus",
            ),
            nullable=False,
        ),
        sa.Column(
            "priority",
            sa.Enum("LOW", "MEDIUM", "HIGH", "URGENT", name="taskpriority"),
            nullable=False,
        ),
        sa.Column("assigned_to", sa.UUID(), nullable=True),
        sa.Column("assigned_at", sa.DateTime(), nullable=True),
        sa.Column("created_by", sa.UUID(), nullable=False),
        sa.Column("pointcloud_file_id", sa.UUID(), nullable=False),
        sa.Column("max_annotations", sa.Integer(), nullable=False),
        sa.Column("require_review", sa.Boolean(), nullable=False),
        sa.Column("due_date", sa.DateTime(), nullable=True),
        sa.Column("completed_at", sa.DateTime(), nullable=True),
        sa.Column("quality_score", sa.Integer(), nullable=True),
        sa.Column("instructions", sa.Text(), nullable=True),
        sa.Column("project_id", sa.UUID(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["assigned_to"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["pointcloud_file_id"],
            ["pointcloud_files.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_tasks_assigned_to"), "tasks", ["assigned_to"], unique=False
    )
    op.create_index(op.f("ix_tasks_name"), "tasks", ["name"], unique=False)
    op.create_index(op.f("ix_tasks_project_id"), "tasks", ["project_id"], unique=False)
    op.create_index(op.f("ix_tasks_status"), "tasks", ["status"], unique=False)
    op.create_table(
        "annotations",
        sa.Column("task_id", sa.UUID(), nullable=False),
        sa.Column("annotator_id", sa.UUID(), nullable=False),
        sa.Column("vehicle_type_id", sa.UUID(), nullable=True),
        sa.Column("vehicle_type_name", sa.String(length=100), nullable=True),
        sa.Column("confidence", sa.Float(), nullable=True),
        sa.Column("notes", sa.Text(), nullable=True),
        sa.Column(
            "status",
            sa.Enum(
                "DRAFT",
                "SUBMITTED",
                "APPROVED",
                "REJECTED",
                "NEEDS_REVISION",
                name="annotationstatus",
            ),
            nullable=False,
        ),
        sa.Column("started_at", sa.DateTime(), nullable=False),
        sa.Column("submitted_at", sa.DateTime(), nullable=True),
        sa.Column("time_spent", sa.Integer(), nullable=True),
        sa.Column("quality_score", sa.Integer(), nullable=True),
        sa.Column("extra_data", sa.JSON(), nullable=True),
        sa.Column("version", sa.Integer(), nullable=False),
        sa.Column("project_id", sa.UUID(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["annotator_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["task_id"],
            ["tasks.id"],
        ),
        sa.ForeignKeyConstraint(
            ["vehicle_type_id"],
            ["project_vehicle_types.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_annotations_annotator_id"),
        "annotations",
        ["annotator_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_annotations_project_id"), "annotations", ["project_id"], unique=False
    )
    op.create_index(
        op.f("ix_annotations_status"), "annotations", ["status"], unique=False
    )
    op.create_index(
        op.f("ix_annotations_task_id"), "annotations", ["task_id"], unique=False
    )
    op.create_table(
        "annotation_reviews",
        sa.Column("annotation_id", sa.UUID(), nullable=False),
        sa.Column("reviewer_id", sa.UUID(), nullable=False),
        sa.Column(
            "status",
            sa.Enum(
                "PENDING", "APPROVED", "REJECTED", "NEEDS_REVISION", name="reviewstatus"
            ),
            nullable=False,
        ),
        sa.Column("comments", sa.Text(), nullable=True),
        sa.Column("rating", sa.Integer(), nullable=True),
        sa.Column("feedback", sa.JSON(), nullable=True),
        sa.Column("reviewed_at", sa.DateTime(), nullable=True),
        sa.Column("project_id", sa.UUID(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["annotation_id"],
            ["annotations.id"],
        ),
        sa.ForeignKeyConstraint(
            ["reviewer_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_annotation_reviews_annotation_id"),
        "annotation_reviews",
        ["annotation_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_annotation_reviews_project_id"),
        "annotation_reviews",
        ["project_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_annotation_reviews_reviewer_id"),
        "annotation_reviews",
        ["reviewer_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_annotation_reviews_status"),
        "annotation_reviews",
        ["status"],
        unique=False,
    )
    op.create_table(
        "notifications",
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("project_id", sa.UUID(), nullable=True),
        sa.Column(
            "type",
            sa.Enum(
                "INFO",
                "WARNING",
                "ERROR",
                "SUCCESS",
                "TASK_ASSIGNED",
                "TASK_COMPLETED",
                "REVIEW_REQUESTED",
                "REVIEW_COMPLETED",
                "PROJECT_INVITATION",
                name="notificationtype",
            ),
            nullable=False,
        ),
        sa.Column("title", sa.String(length=200), nullable=False),
        sa.Column("message", sa.Text(), nullable=False),
        sa.Column(
            "status",
            sa.Enum("UNREAD", "READ", "ARCHIVED", name="notificationstatus"),
            nullable=False,
        ),
        sa.Column("read_at", sa.DateTime(), nullable=True),
        sa.Column("related_task_id", sa.UUID(), nullable=True),
        sa.Column("related_annotation_id", sa.UUID(), nullable=True),
        sa.Column("extra_data", sa.JSON(), nullable=True),
        sa.Column("action_url", sa.String(length=500), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["project_id"],
            ["projects.id"],
        ),
        sa.ForeignKeyConstraint(
            ["related_annotation_id"],
            ["annotations.id"],
        ),
        sa.ForeignKeyConstraint(
            ["related_task_id"],
            ["tasks.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_notifications_project_id"),
        "notifications",
        ["project_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_notifications_status"), "notifications", ["status"], unique=False
    )
    op.create_index(
        op.f("ix_notifications_type"), "notifications", ["type"], unique=False
    )
    op.create_index(
        op.f("ix_notifications_user_id"), "notifications", ["user_id"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_notifications_user_id"), table_name="notifications")
    op.drop_index(op.f("ix_notifications_type"), table_name="notifications")
    op.drop_index(op.f("ix_notifications_status"), table_name="notifications")
    op.drop_index(op.f("ix_notifications_project_id"), table_name="notifications")
    op.drop_table("notifications")
    op.drop_index(op.f("ix_annotation_reviews_status"), table_name="annotation_reviews")
    op.drop_index(
        op.f("ix_annotation_reviews_reviewer_id"), table_name="annotation_reviews"
    )
    op.drop_index(
        op.f("ix_annotation_reviews_project_id"), table_name="annotation_reviews"
    )
    op.drop_index(
        op.f("ix_annotation_reviews_annotation_id"), table_name="annotation_reviews"
    )
    op.drop_table("annotation_reviews")
    op.drop_index(op.f("ix_annotations_task_id"), table_name="annotations")
    op.drop_index(op.f("ix_annotations_status"), table_name="annotations")
    op.drop_index(op.f("ix_annotations_project_id"), table_name="annotations")
    op.drop_index(op.f("ix_annotations_annotator_id"), table_name="annotations")
    op.drop_table("annotations")
    op.drop_index(op.f("ix_tasks_status"), table_name="tasks")
    op.drop_index(op.f("ix_tasks_project_id"), table_name="tasks")
    op.drop_index(op.f("ix_tasks_name"), table_name="tasks")
    op.drop_index(op.f("ix_tasks_assigned_to"), table_name="tasks")
    op.drop_table("tasks")
    op.drop_index(op.f("ix_project_members_user_id"), table_name="project_members")
    op.drop_index(op.f("ix_project_members_project_id"), table_name="project_members")
    op.drop_table("project_members")
    op.drop_index(op.f("ix_projects_status"), table_name="projects")
    op.drop_index(op.f("ix_projects_name"), table_name="projects")
    op.drop_table("projects")
    op.drop_index(
        op.f("ix_project_vehicle_types_project_id"), table_name="project_vehicle_types"
    )
    op.drop_index(
        op.f("ix_project_vehicle_types_name"), table_name="project_vehicle_types"
    )
    op.drop_table("project_vehicle_types")
    op.drop_index(op.f("ix_pointcloud_files_status"), table_name="pointcloud_files")
    op.drop_index(op.f("ix_pointcloud_files_project_id"), table_name="pointcloud_files")
    op.drop_index(op.f("ix_pointcloud_files_filename"), table_name="pointcloud_files")
    op.drop_table("pointcloud_files")
    op.drop_index(op.f("ix_users_username"), table_name="users")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_table("users")
    op.drop_index(
        op.f("ix_global_vehicle_types_name"), table_name="global_vehicle_types"
    )
    op.drop_table("global_vehicle_types")
    # ### end Alembic commands ###
